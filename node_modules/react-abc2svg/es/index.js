function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import React, { PureComponent } from 'react';
import { findDOMNode } from 'react-dom';
import PropTypes from 'prop-types';
import { Abc } from 'abc2svg/abc2svg-1.js';

var Abc2svgCallbacks = function Abc2svgCallbacks() {
  var _this = this;

  _classCallCheck(this, Abc2svgCallbacks);

  this.abc_svg_output = "";
  this.abc_error_output = "";
  this.img_out = function (data) {
    _this.abc_svg_output += data;
  };
  this.errmsg = function (msg, ln, cn) {
    _this.abc_error_output += msg + "<br/>\n";
  };
  this.read_file = function (fn) {
    return "";
  };
  this.anno_start = function (music_type, start_offset, stop_offset, x, y, w, h) {};
  this.anno_stop = function (music_type, start_offset, stop_offset, x, y, w, h) {};
  this.get_abcmodel = function (tsfirst, voice_tb, music_types, info) {};
  this.page_format = true;
};

var Abc2Svg = function (_PureComponent) {
  _inherits(Abc2Svg, _PureComponent);

  function Abc2Svg() {
    var _temp, _this2, _ret;

    _classCallCheck(this, Abc2Svg);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this2), _this2.state = {
      containerWidth: ''
    }, _this2.uniqueNumber = Date.now() + Math.random(), _this2.abcCallbacks = new Abc2svgCallbacks(), _this2.fitWidth = function () {
      _this2.setState({ containerWidth: '%%pagewidth ' + window.getComputedStyle(findDOMNode(_this2)).width + '\n' });
    }, _temp), _possibleConstructorReturn(_this2, _ret);
  }

  Abc2Svg.prototype.componentDidMount = function componentDidMount() {
    this.fitWidth();
    window.addEventListener('resize', this.fitWidth);
  };

  Abc2Svg.prototype.componentWillUnmount = function componentWillUnmount() {
    window.removeEventListener('resize', this.fitWidth);
  };

  Abc2Svg.prototype.render = function render() {
    var _props = this.props,
        abcNotation = _props.abcNotation,
        showErrors = _props.showErrors;
    var containerWidth = this.state.containerWidth;


    var abc = new Abc(this.abcCallbacks);
    this.abcCallbacks.abc_svg_output = '';
    this.abcCallbacks.abc_error_output = '';
    abc.tosvg('ABC NOTATION', '%%fullsvg ra2s' + this.uniqueNumber + '\n' + containerWidth + abcNotation);

    return React.createElement(
      'div',
      { style: { width: '100%' } },
      React.createElement('div', { className: 'abc2svg-result', style: { width: '100%' },
        dangerouslySetInnerHTML: { __html: this.abcCallbacks.abc_svg_output }
      }),
      showErrors && this.abcCallbacks.abc_error_output !== '' && React.createElement('div', { className: 'abc2svg-errors', style: { width: '100%', textAlign: 'center' },
        dangerouslySetInnerHTML: { __html: this.abcCallbacks.abc_error_output }
      })
    );
  };

  return Abc2Svg;
}(PureComponent);

Abc2Svg.propTypes = process.env.NODE_ENV !== "production" ? {
  abcNotation: PropTypes.string,
  showErrors: PropTypes.bool
} : {};

Abc2Svg.defaultProps = {
  abcNotation: '',
  showErrors: false
};

export default Abc2Svg;